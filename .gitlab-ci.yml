stages:
  - prepare
  - sast
  - build

variables:
  CACHE_FALLBACK_KEY: "main"
  # This variable has to be overridden to allow caching of conan packages, which must be updated the project dir to get cached.  This is where conan will look for the `.conan` directory
  CONAN_USER_HOME: "$CI_PROJECT_DIR"
  CONAN_USERNAME: "gitlab-ci"
  CONAN_REFERENCE: "advanced-flex-server/0.9"
  CONAN_CHANNEL: "gitlab-ci"
  CONAN_UPLOAD: "https://systemicai.jfrog.io/artifactory/api/conan/afs-http@True@systemicai-afshttp"
  CONAN_REMOTE: "https://systemicai.jfrog.io/artifactory/api/conan/afs-http@True@systemicai-afshttp"
  CC: "clang"
  CXX: "clang++"
  CONAN_CLANG_VERSIONS: "10"
  DEPENDENCIES: "${CI_PROJECT_DIR}/.deps-linux"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
  # Don't just cache $CONAN_USER_HOME because that includes credentials (and complicates scripts)
  - "$CONAN_USER_HOME/.conan/data"
  - "$DEPENDENCIES"

.build-template: &build-template
  before_script:
  - sudo pip install --upgrade conan_package_tools
  - conan user
  - conan remote add systemicai-afshttp https://systemicai.jfrog.io/artifactory/api/conan/afs-http
  # These two env vars are set in the CICD variables in gitlab which are only available on protected branches - if they are empty we are on a branch that isn't "protected" - e.g. is not meant to be published - probably a feature or merge request
  - '[[ ! -z "${CONAN_PASSWORD}" ]] && conan user -r systemicai-afshttp -p "${CONAN_PASSWORD}" "${CONAN_LOGIN_USERNAME}"'
  # Set the dependencies directory before build so it uses the cached location
  - echo "${DEPENDENCIES}" > .deps

dependencies:
  stage: prepare
  image: conanio/clang10
  script:
  - mkdir -p build
  - pushd build
  - cmake ..
  - make dependencies # Populates the cache directory with built libraries for boost, etc
  - popd # build
  <<: *build-template

cppcheck:
  stage: sast
  image: conanio/clang10
  script:
    - mkdir -p build
    - pushd build
    - cmake ..
    - make cppcheck
    - popd # build

clang-10.0:
  artifacts:
    reports:
      junit: build/test-server-settings.report.xml
  stage: build
  image: conanio/clang10
  script:
  - mkdir -p build
  - pushd build
  - cmake ..
  - make
  - popd # build
  <<: *build-template
